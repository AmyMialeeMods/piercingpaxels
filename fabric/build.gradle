plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set("dev-shadow")
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set(null)
}

jar {
    archiveClassifier.set("dev")
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

curseforge {
    apiKey = project.hasProperty('curseforge_api_key') ? project.property('curseforge_api_key') : ''
    project {
        id = project.curseforge_project_id
        changelogType = 'markdown'
        changelog = file("CHANGELOG.md")
        addGameVersion project.minecraft_version
        addGameVersion "Fabric"
        addGameVersion "Quilt"
        mainArtifact(remapJar) {
            displayName = "v${project.version.toString().split("\\+")[0]} for Fabric/Quilt MC $project.minecraft_version"
            releaseType = "release"
            relations {
                requiredDependency "fabric-api"
                requiredDependency "architectury-api"
            }
        }
    }
}

modrinth {
    token = project.hasProperty("modrinth_api_key") ? project.property("modrinth_api_key") : ""
    projectId = project.modrinth_project_id
    versionNumber = project.version
    versionName = "v${project.version.toString().split("\\+")[0]} for Fabric/Quilt MC $project.minecraft_version"
    changelog = file("CHANGELOG.md").text
    versionType = "release"
    uploadFile = remapJar
    gameVersions = [project.minecraft_version]
    loaders = ["fabric", "quilt"]
    dependencies {
        // required/optional/incompatible/embedded + project/version
        required.project "fabric-api"
        required.project "architectury-api"
    }
}